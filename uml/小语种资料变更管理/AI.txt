https://wise-3.ux168.cn/#/chat

uml流程图，用puml写出来一个流程图：

流程A:

用户A保存资料，如果资料的按钮类型是UpdateAttribute 或者 updateForbiddenWord，就进入预计创建资料变更的接口，否则就做其他操作。

进入预计创建资料变更接口，如果资料的平台、渠道和属性都符合来自配置config的数据的要求，就创建 审批状态 = 10(新建) 的单据，否则就 不创建单据。

创建单据后，发起处理资料单据的MQ，更新资料 流程状态 = 10(等待翻译)，

接收处理资料单据的MQ后，开始翻译，更新 流程状态 = 20(翻译中), 调用 translation-node-js接口，返回结果，如果 结果有值，就更新 流程状态 = 30(翻译完成)，否则就 更新 流程状态 = 40(翻译失败)，中止下一步

翻译完成的单据，继续下一步，更新 流程状态 = 60(禁词检查中), 然后开始禁词检查，调用禁词检查接口，获取接口返回，如果 接口调用成功就 更新 流程状态 = 70(禁词检查完成)，否则就 更新 流程状态 = 80(禁词检查失败)，中止下一步；

禁词检查完成后，开始 调用检查字符长度的接口，接口返回结果不管长度是否符合 都更新 流程状态 = 100(长度检查成功)，如果接口调用失败，就更新流程状态 = 110(长度检查失败)，中止下一步;

在上述检查(没有中止)都结束之后，如果禁词检查接口结果 存在禁词，就存储禁词内容，如果长度不符合并且修改 审批状态； 如果长度不符合条件，就记录 不符合条件的原因，如果 翻译有结果，就存储翻译内容，最后 更新流程状态 = 120(全部检查完毕) 和 更新 审批状态 = 20(待审核), 这里结束流程A


流程B：
用户B点击更新单据，如果审批状态 = 20(待审核)的，发起 处理资料单据的MQ，更新 审批状态 = 30(检查更新中) 和 流程状态 = 50(等待禁词检查), 否则 中止下一步；

接收 处理资料单据的MQ，更新 流程状态 = 60(禁词检查中)，然后开始禁词检查，调用禁词检查接口，获取接口返回，如果 接口调用成功就 更新 流程状态 = 70(禁词检查完成)，否则就 更新 流程状态 = 80(禁词检查失败)，中止下一步,更新 审批状态 = 40(检查不通过)；

如果是禁词检查完成，就开始 调用检查字符长度的接口，接口返回结果不管长度是否符合 都更新 流程状态 = 100(长度检查成功)，如果接口调用失败，就更新流程状态 = 110(长度检查失败)，中止下一步;

在上述检查(没有中止)都结束之后，如果禁词检查接口结果 存在禁词，就存储禁词内容，如果长度不符合并且修改 审批状态； 如果长度不符合条件，就记录 不符合条件的原因，最后 更新流程状态 = 120(全部检查完毕) 和 更新 审批状态 = 40(检查不通过)

如果不存在禁词，且长度都符合要求，就更新流程状态 = 120(全部检查完毕) 和 更新 审批状态 = 50(检查通过)，然后开始发起 更新资料的接口，更新审批状态 = 60(正在更新中)

更新资料完成，成功就更新 审批状态 = 70(已更新),失败就更新 审批状态 = 80(更新失败); 这里结束流程B

以上审批状态和流程状态的文字分别帮忙标红色 和 绿色


用户C点击忽略单据，审批状态 = 90(已忽略)，这里结束流程B；


流程C：
用户D 导入批量审核更新，上传oss文件，调用导入批量审核更新接口，发起MQ，先获取oss文件解析文件内容，存储属性翻译数据，和对应属性在单据上的主键ID，和平台，操作人，oss文件路径。存储数据失败，就生成失败内容，整理成xlsx文档，上传oss，再发送钉钉提醒用户报错，贴上导入文件明细，重新导入。

如果文件解析成功，数据记录成功，文件里面的每一个单据，都走流程B一样的逻辑。一样也会发送钉钉通知提醒业务，查看进度。在部分数据检查不通过时，就钉钉提醒报错，贴上导入文件明细，解决问题之后，重新导入。





uml时序图，用puml写出来一个时序图：

流程A:

title 为 资料变更单据创建
然后开始autonumber

有一个actor 用户 命名为 customer

设置几个应用项目 作为box，需要用到的应用有：product_operation_js_angular5、pa-biz-application、pa-biz-service、translation_nodejs_app、product_operation_listing_management_nodejs_app、platform-config-service、
platform-message-servic、RocketMQ、mysql、mongo;
每个应用都有几个接口和功能;
product_operation_js_angular5 有 [资料编辑-保存-修改属性更新] 作为 page1、[资料编辑-保存-修改侵权禁词] 作为page2、[批量资料编辑] 作为paeg3;
pa-biz-application 有 [处理资料变更单据服务] 作为 app1;
pa-biz-service 有[初始化创建资料变更单据]作为service1、[更新资料变更单据]作为service2、[资料翻译+禁词检查+长度校验服务]作为service3;
product_operation_listing_management_nodejs_app 有 [updateProductSku接口更新资料服务]作为node1、[资料变更前后差异比对服务]作为node2、[禁词检查]作为node3;
translation_nodejs_app 有[翻译]作为translation;
platform-config-service有[配置]作为config1;
platform-message-service有[钉钉通知]作为msg1;
RocketMQ有[资料翻译+禁词检查MQ]作为mq1;
ux168-log-service作为log1;
mysql有sms_material_changed_notice_doc作为sql1,有个sms_material_changed_batch_export_apply作为sql2;
mongo有product-sku 作为mongo1，有个product-sku-log作为mongo2;

然后通过customer对这个应用里面的功能，做流程交互，首先customer进入page1或page2或者page3, 保存资料后出都会进入到node1调用资料更新的接口，预留参数param1 = 在mongo1数据更新之前的旧数据，在数据入库mongo1后，新数据就是param2 ,parma1 和parma2对比获取数据变更的差异，赋值为diff1,
这个diff1 和 skuid，就作为入参进入 接口app1;

进入app1后 ,调用config1，获取配置参数，拿到需要做资料变更单据的 平台，渠道，属性等，用diff1遍历，通过config1的数据，筛选符合条件的渠道，属性名，遍历结束后符合条件的所有数据，每一个属性都会根据单据规则生成一个单据号batch_no，会构建出一个object对象，对象的每个键值分别有batch_no,platform,channel,seller_id,sku_id,company_id,attribute_name.
changed_before_reference_attribute_value,changed_after_reference_attribute_value,apply_status，这里apply_status = 10(新建),数据整理后调用service1，直接存储到sql1,然后返回主键id 给 service1。有了主键id之后，调用mq1，初始化process_status = 10(等待翻译),
mq1 接收主键id，mq1 进入 service3 下的一个方法autoTranslationReferenceAttribute，开始自动翻译属性，更新process_status = 20(翻译中), 调用translation, translation返回结果给autoTranslationReferenceAttribute，结果如果是没有值或者调用失败就更新process_status=40(翻译失败)并且中止mq1.
否则成功且有值就更新process_status=30(翻译完成), changed_after_reference_attribute_value翻译后值就是changed_after_reference_attribute_translation_value 内容，根据changed_after_reference_attribute_translation_value和channel调service3 的一个方法autoCheckTranslationReferenceAttributeForbidden,
更新process_status =60(禁词检查中), 调用node3,如果调用node3 超时失败了，就更新process_status=80(禁词检查失败)并且中止mq1； 如果成功拿到node3 返回的禁词结果forbidden_result, forbidden_result 是一个数组对象，遍历forbidden_result，
判断里面的值type是否存在禁词，如果存在禁词，就记录所有禁词内容，记做forbidden_value_list，并且更新process_status=70(禁词检查完成),
然后开始调用service3下的一个方法autoCheckAttributeLength，开始自动检查属性长度，更新process_status = 90(长度检查中), 从config1获取不同平台渠道的属性的长度条件配置, 用这个配置里面的长度值，和属性的长度size比较大小得知长度结果attribute_value_length_result，超过配置长度，就更新process_status=100(长度检查成功)，如果配置获取失败就process_status=110(长度检查失败),并且中止mq1,
在三个校验方法全部完成后，将翻译内容 changed_after_reference_attribute_translation_value，禁词内容forbidden_value_list，长度校验结果attribute_value_length_result等数据，process_status=120(全部检查完毕),apply_status=20(待审核),通过调用service2 的更新资料变更的接口 update, 再存储进入sql1，都存到对应主键id的单据下。
至此，路程A结束，中止mq1.